.de-f {
  display: flex;
}

.de-f-inline {
  display: inline-flex;
}

// Flex direction
@mixin flex-direction($order) {
  display: flex;
  flex-direction: $order;
}

.de-f-row {
  @include flex-direction(row);
}

.de-f-column {
  @include flex-direction(column);
}

// Flex horizontal alignment
@mixin flex-justify($position, $self: false) {
  display: flex;
  justify-content: $position;

  @if $self {
    justify-self: $position;
  }
}

@each $elem, $value in ('': false, 's': true) {
  .de-f#{$elem}-justifyleft {
    @include flex-justify(flex-start, $value);
  }

  .de-f#{$elem}-justifycenter {
    @include flex-justify(center, $value);
  }

  .de-f#{$elem}-justifyright {
    @include flex-justify(flex-end, $value);
  }

  .de-f#{$elem}-justifyspacebetween {
    @include flex-justify(space-between, $value);
  }

  .de-f#{$elem}-justifyspacearound {
    @include flex-justify(space-around, $value);
  }
}

// Flex vertical alignment
@mixin flex-align($position, $self: false) {
  align-items: $position;

  @if $self {
    align-self: $position;
  }

  display: flex;
}

@each $elem, $value in ('': false, 's': true) {
  .de-f#{$elem}-aligntop {
    @include flex-align(flex-start, $value);
  }

  .de-f#{$elem}-aligncenter {
    @include flex-align(center, $value);
  }

  .de-f#{$elem}-alignbottom {
    @include flex-align(flex-end, $value);
  }
}

// Flex grow
@mixin flex-grow($value, $force) {
  display: flex;
  @if $force {
    flex-grow: $value $force;
  } @else {
    flex-grow: $value;
  }
}

@each $elem, $value in ('': 1, 'no': 0) {
  .de-f-#{$elem}grow {
    @include flex-grow($value, false);
  }

  .de-f-#{$elem}grow--force {
    @include flex-grow($value, !important);
  }
}


// Flex wrap
@mixin flex-wrap($value) {
  display: flex;
  flex-wrap: $value;
}

.de-f-wrap {
  @include flex-wrap(wrap);
}

.de-f-nowrap {
  @include flex-wrap(nowrap);
}

// Combinations
.de-f-rowstart {
  @include flex-align(flex-start);
  @include flex-direction(row);
}

.de-f-rowcenter {
  @include flex-align(center);
  @include flex-direction(row);
}

.de-f-rowend {
  @include flex-align(flex-end);
  @include flex-direction(row);
}

.de-f-columnleft {
  @include flex-align(flex-start);
  @include flex-direction(column);
}

.de-f-columncenter {
  @include flex-align(center);
  @include flex-direction(column);
}

.de-f-columnright {
  @include flex-align(flex-end);
  @include flex-direction(column);
}

.de-f-rowstretch {
  @include flex-direction(row);
  @include flex-align(stretch, true);
}

@each $elem, $value in ("xsmall": 3px, "small": 6px, "base": 12px, "medium": 24px, "large": 36px, "xlarge": 48px) {
  .de-gap-#{$elem} {
    gap: $value;
  }
}
