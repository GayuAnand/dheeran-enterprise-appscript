@use "sass:map";

$spacing: ("xsmall": 3px, "small": 6px, "base": 12px, "medium": 24px, "large": 36px, "xlarge": 48px);

@each $forceSuffix, $forceValue in ('': '', '--force': ' !important') {
  @each $prefix, $prop in ('m': 'margin', 'p': 'padding') {
    @each $type in ('xsmall', 'small', 'base', 'medium', 'large', 'xlarge') {
      .de-#{$prefix}-#{$type}#{$forceSuffix} {
        #{$prop}: map.get($spacing, $type)#{$forceValue};
      }

      @each $positionAbbr, $position in ('t': 'top', 'r': 'right', 'b': 'bottom', 'l': 'left') {
        .de-#{$prefix}-#{$positionAbbr}#{$type}#{$forceSuffix} {
          #{$prop}-#{$position}: map.get($spacing, $type)#{$forceValue};
        }
      }

      @each $positionAbbr, $positions in ('v': ('top', 'bottom'), 'h': ('left', 'right')) {
        .de-#{$prefix}-#{$positionAbbr}#{$type}#{$forceSuffix} {
          @each $position in $positions {
            #{$prop}-#{$position}: map.get($spacing, $type)#{$forceValue};
          }
        }
      }
    }
  }
}

@each $forceSuffix, $forceValue in ('': '', '--force': ' !important') {
  @each $prefix, $prop in ('': 'margin', 'm': 'margin', 'p': 'padding') {
    @each $type in ('xsmall', 'small', 'base', 'medium', 'large', 'xlarge') {
      .de-s#{$prefix}-#{$type}#{$forceSuffix} > *,
      .de-s#{$prefix}-#{$type}-nofirst#{$forceSuffix} > *:not(:first-child),
      .de-s#{$prefix}-#{$type}-nolast#{$forceSuffix} > *:not(:last-child) {
        #{$prop}: map.get($spacing, $type)#{$forceValue};
      }

      @each $positionAbbr, $position in ('t': 'top', 'r': 'right', 'b': 'bottom', 'l': 'left') {
        .de-s#{$prefix}-#{$positionAbbr}#{$type}#{$forceSuffix} > *,
        .de-s#{$prefix}-#{$positionAbbr}#{$type}-nofirst#{$forceSuffix} > *:not(:first-child),
        .de-s#{$prefix}-#{$positionAbbr}#{$type}-nolast#{$forceSuffix} > *:not(:last-child) {
          #{$prop}-#{$position}: map.get($spacing, $type)#{$forceValue};
        }
      }

      @each $positionAbbr, $positions in ('v': ('top', 'bottom'), 'h': ('left', 'right')) {
        .de-s#{$prefix}-#{$positionAbbr}#{$type}#{$forceSuffix} > *,
        .de-s#{$prefix}-#{$positionAbbr}#{$type}-nofirst#{$forceSuffix} > *:not(:first-child),
        .de-s#{$prefix}-#{$positionAbbr}#{$type}-nolast#{$forceSuffix} > *:not(:last-child) {
          @each $position in $positions {
            #{$prop}-#{$position}: map.get($spacing, $type)#{$forceValue};
          }
        }
      }
    }
  }
}

@each $forceSuffix, $forceValue in ('': '', '--force': ' !important') {
  @each $prefix, $prop in ('nm': 'margin', 'np': 'padding') {
    .de-#{$prefix}#{$forceSuffix} {
      #{$prop}: 0#{$forceValue};
    }

    @each $position in ('top', 'right', 'bottom', 'left') {
      .de-#{$prefix}-#{$position}#{$forceSuffix} {
        #{$prop}-#{$position}: 0#{$forceValue};
      }
    }

    @each $position, $positions in ('vertical': ('top', 'bottom'), 'horizontal': ('left', 'right')) {
      .de-#{$prefix}-#{$position}#{$forceSuffix} {
        @each $position in $positions {
          #{$prop}-#{$position}: 0#{$forceValue};
        }
      }
    }
  }
}
